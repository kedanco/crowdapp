/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS/SCSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *

 */

@import "bootstrap-sprockets";
@import "bootstrap";
@import 'bootstrap-datetimepicker';
@import "crowdapp";
@import "flashes";
@import "navbar";


@import url(https://fonts.googleapis.com/css?family=Roboto:300);

*, *:before, *:after {
  margin:0;
  padding:0;
  box-sizing:border-box;
}

body {
  font-family: 'Roboto', sans-serif;
  color:white;
}

.horizontal-parent {overflow:hidden;}

.horizontal-parent {
  position:absolute;
  top:0;
  left:0;
  width:100vw;
  height:100vh;
}

// number of slides
$slides:4;

// This is the wrapper for the slides
.horizontal-child {
  position:relative;
  display:block;
  width:100vh;
  height:100vw;
  overflow:scroll;
  transform-origin:100% 0%;
  transform:rotate(-90deg) translateY(-100vh);

  // each slide should be the size of the viewport
  .slide {
    z-index:2;
    display:flex;
    position:absolute;
    width:100vw;
    height:100vh;
    overflow:hidden;
    text-align:center;
    transform-origin:0% 0%;

    &:after {
      content:'';
      position:absolute;
      background-image:linear-gradient(#A2BA0C, #A2BA0C);
      // background-attachment fixed does the magic on the background
      background-attachment:fixed;
      background-position:0 0;
      background-repeat:no-repeat;
      z-index:-1;
    }

    // As every .slide is positioned absolute, we translate each on the x-axis
    // by nth * viewport-width >> so they sit next to each other
    // like this: □□□□
    // + rotate them by 90deg
    // + slide them up by translate them on the y-axis by 100 viewport-height
    @for $slide from 1 through $slides {
      $perc:1 / $slides;
      $i: ($slide - 1) * $perc;
      $color:adjust-hue( red, ($slide * 10%) );
      &:nth-child(#{$slide}) {
        transform:rotate(90deg) translateY(-100%) translateX(($slide - 1) * 99.9vw);
        background-color:$color;

        // trail and error
        // there's a logic behind it, but I got screwed up by all the rotations
        &:after {
          top: $slide * -100%;
          left: $slide * -100%;
          width: $slide * 200%;
          height: $slide * 200%;
          background-size:($slide * 200%) ($slide * 200%);
          transform:scale(1-$i);
        }
      }
    }

  // center the content of each slide
  // remember: we set the parent element to display:flex
  .slide-heading {
    margin:auto;
  }

  img {
      display:block;
      width:50%;
      height:auto;
      margin:auto;
    }
  }
}

#hand-left {fill:red;}

// Some styling

.slide-heading h1 {
  font-size:7vw;
  font-weight:300;
  text-transform:uppercase;
  letter-spacing:1vw;
  // transform:rotate(180deg);
}

.slide-heading h2 {
  font-size:2vw;
  font-weight:300;
  text-transform:uppercase;
  letter-spacing:1vw;
}




// Hiding the scrollbar
// for reference >> https://css-tricks.com/custom-scrollbars-in-webkit/

.horizontal-child {
  &::-webkit-scrollbar {
    display:none;
  }

  &::-webkit-scrollbar-track {
    display:none;
  }

  &::-webkit-scrollbar-thumb {
    display:none;
  }

  &::-webkit-scrollbar-thumb:window-inactive {
	  display:none;
  }
}






// //Edit these
// $farColor: #ffe4c7;
// $nearColor: darken(cyan,30%);
// $layer: 7; //make sure it is +1 the ammount of layer divs in the html
// $perspective: 1;
//
// .bg {
//   position:absolute;
//   height:100%;
//   width:100%;
//   top:0px;
//   z-index:0;
//   background-color:$farColor;
// }
//
// .layer {
//   position:fixed;
//   top:0px;
//   margin:auto;
//   width:100%;
//   z-index:100;
//   min-height:400px;
//   top: 0; left: 0; right: 0; bottom: 0;
//   background-position: top center;
//   background-repeat: no-repeat;
// }
//
// .parallax {
//   height: 100vh;
//   overflow-x: hidden;
//   overflow-y: scroll;
//   perspective: #{$perspective + px};
// }
//
// .parallax-group {
//   position: relative;
//   height: 100vh;
//   transform-style: preserve-3d;
// }
//
//
//
//
// @for $i from 1 to $layer {
//   .parallax-group div:nth-child(#{$i}) {
//
//     //figure out best mixing math, this isn't true to the starting colors, doesnt scale that well
//     $mixedColor: mix($nearColor, $farColor, $i*15);
//     $randOffset: random(300)+px;
//     $zDepth: ($layer - $i)/0.5;
//
//     background-color:$farColor;
//     margin-top:#{300*($i+1) + px};
//     background-color:$mixedColor;
//     transform: translateZ(#{-($zDepth) + px}) scale(#{1 + (-($zDepth) * -1) / $perspective});
//
//     &:before {
//       content:"";
//       width:100%;
//       height:200px;
//       position:absolute;
//       bottom:100%;
//       left:0;
//       background-image: linear-gradient(135deg, transparent 66%, $mixedColor 66.01%),
//                         linear-gradient(45deg, $mixedColor 34%, transparent 34.01%);
//       background-position: $randOffset 0px;
//       background-size: 200px 100%;
//       background-repeat:repeat-x;
//     }
//   }
//
// } //loop over
//
//
//
//
//
//
//
// ///Demo specific styling
//
//
//
// .content {
//   position:relative;
//   background-color:transparent;
//   font-family:"Arial";
//   letter-spacing:10px;
//   text-transform:uppercase;
//   line-height:40px;
//   z-index:10;
//   width:100%;
//   font-size:15px;
//   text-align:center;
//   color:white;
//   margin-top:1000px;
//   $zDepth: (1)/0.5;
//   transform: translateZ(#{-($zDepth) + px}) scale(#{1 + (-($zDepth) * -1) / $perspective});
// }
//
// .fill {
//   height:80%; //?
// }

// font animation
.cool-link  {
    display: inline-block;
    color: white;
}

.cool-link:hover  {
    text-decoration: none;
}


.cool-link::after {
    content: '';
    display: block;
    width: 0;
    height: 2px;
    background: white;
    transition: width .3s;
}

.cool-link:hover::after {
    width: 100%;

    //transition: width .3s;
}

// social
.social {
  padding-top: 20px;
  word-spacing: 35px;

}


.footer {
  height: 80px;
  color: black;
  right: 0;
  bottom: 0;
  left: 0;
  padding: 30px;
  text-align: center;
}
